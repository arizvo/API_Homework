{
	"info": {
		"_postman_id": "68fd94b2-2930-46f2-a4d9-8f55ec43b0bc",
		"name": "API_Homework1_Task1_SmokeTest_DummySite",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json",
		"_exporter_id": "27457597",
		"_collection_link": "https://martian-desert-305865.postman.co/workspace/API_Homework_1~a74cfbfb-2571-4113-a4eb-6841646f9c45/collection/27457597-68fd94b2-2930-46f2-a4d9-8f55ec43b0bc?action=share&creator=27457597&source=collection_link"
	},
	"item": [
		{
			"name": "CreateToken",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 200\", function () {",
							"    pm.response.to.have.status(200);",
							"});",
							"",
							"var jsonData = JSON.parse(responseBody);",
							"pm.collectionVariables.set(\"token\", jsonData.token);"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\n    \"username\" : \"admin\",\n    \"password\" : \"password123\"\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "{{url}}/auth",
					"host": [
						"{{url}}"
					],
					"path": [
						"auth"
					]
				}
			},
			"response": []
		},
		{
			"name": "CreateBooking",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 200\", function () {",
							"    pm.response.to.have.status(200);",
							"});",
							"",
							"pm.test(\"Validate set first name, last name and total price.\", function () {",
							"    var jsonData = pm.response.json();",
							"    pm.expect(jsonData.booking.firstname).to.eql(\"Aldin\");",
							"    pm.expect(jsonData.booking.lastname).to.eql(\"Rizvo\");",
							"    pm.expect(jsonData.booking.totalprice).to.eql(222);",
							"});",
							"",
							"var jsonData = JSON.parse(responseBody);",
							"pm.collectionVariables.set(\"createdBookingId\", jsonData.bookingid);"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\n    \"firstname\" : \"Aldin\",\n    \"lastname\" : \"Rizvo\",\n    \"totalprice\" : 222,\n    \"depositpaid\" : true,\n    \"bookingdates\" : {\n        \"checkin\" : \"2023-05-17\",\n        \"checkout\" : \"2023-05-18\"\n    },\n    \"additionalneeds\" : \"Breakfast\"\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "{{url}}/booking",
					"host": [
						"{{url}}"
					],
					"path": [
						"booking"
					]
				}
			},
			"response": []
		},
		{
			"name": "UpdateBooking",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 200\", function () {",
							"    pm.response.to.have.status(200);",
							"});",
							"",
							"pm.test(\"Validate changed first name, last name and total price.\", function () {",
							"    var jsonData = pm.response.json();",
							"    pm.expect(jsonData.firstname).to.eql(\"Aldin\");",
							"    pm.expect(jsonData.lastname).to.eql(\"Rizvo\");",
							"    pm.expect(jsonData.totalprice).to.eql(300);",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "PUT",
				"header": [
					{
						"key": "Cookie",
						"value": "token={{token}}",
						"type": "text"
					}
				],
				"body": {
					"mode": "raw",
					"raw": "{\n    \"firstname\" : \"Aldin\",\n    \"lastname\" : \"Rizvo\",\n    \"totalprice\" : 300,\n    \"depositpaid\" : true,\n    \"bookingdates\" : {\n        \"checkin\" : \"2023-05-17\",\n        \"checkout\" : \"2023-05-18\"\n    },\n    \"additionalneeds\" : \"Breakfast\"\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "{{url}}/booking/{{createdBookingId}}",
					"host": [
						"{{url}}"
					],
					"path": [
						"booking",
						"{{createdBookingId}}"
					]
				}
			},
			"response": []
		},
		{
			"name": "ListAllBookingsByID",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 200\", function () {",
							"    pm.response.to.have.status(200);",
							"});",
							"",
							"pm.test(\"Created booking id is found within all booking ids\", function () {",
							"    const bookings = pm.response.json();",
							"    const value = bookings.find(booking => booking.bookingid === pm.collectionVariables.get(\"createdBookingId\"));",
							"",
							"    pm.expect(value).to.not.be.undefined;",
							"});",
							""
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "{{url}}/booking",
					"host": [
						"{{url}}"
					],
					"path": [
						"booking"
					]
				}
			},
			"response": []
		},
		{
			"name": "FindBookingByID",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 200\", function () {",
							"    pm.response.to.have.status(200);",
							"});",
							"",
							"pm.test(\"Validate first name, last name and total price of customer by ID.\", function () {",
							"    var jsonData = pm.response.json();",
							"    pm.expect(jsonData.firstname).to.eql(\"Aldin\");",
							"    pm.expect(jsonData.lastname).to.eql(\"Rizvo\");",
							"    pm.expect(jsonData.totalprice).to.eql(300);",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "{{url}}/booking/{{createdBookingId}}",
					"host": [
						"{{url}}"
					],
					"path": [
						"booking",
						"{{createdBookingId}}"
					]
				}
			},
			"response": []
		},
		{
			"name": "DeleteBookingByID",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 201\", function () {",
							"    pm.response.to.have.status(201); // 200 (OK) or 204 (No content) status code is more appropriate",
							"});",
							"",
							"pm.test(\"Validate booking delete message\", function () {",
							"    pm.expect(pm.response.text()).to.include(\"Created\"); // Created makes no sense",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "DELETE",
				"header": [
					{
						"key": "Cookie",
						"value": "token={{token}}",
						"type": "text"
					}
				],
				"url": {
					"raw": "{{url}}/booking/{{createdBookingId}}",
					"host": [
						"{{url}}"
					],
					"path": [
						"booking",
						"{{createdBookingId}}"
					]
				}
			},
			"response": []
		}
	],
	"event": [
		{
			"listen": "prerequest",
			"script": {
				"type": "text/javascript",
				"exec": [
					""
				]
			}
		},
		{
			"listen": "test",
			"script": {
				"type": "text/javascript",
				"exec": [
					""
				]
			}
		}
	],
	"variable": [
		{
			"key": "url",
			"value": "https://restful-booker.herokuapp.com",
			"type": "string"
		},
		{
			"key": "token",
			"value": "",
			"type": "string"
		},
		{
			"key": "createdBookingId",
			"value": "",
			"type": "string"
		}
	]
}